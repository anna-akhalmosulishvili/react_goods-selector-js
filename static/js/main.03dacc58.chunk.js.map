{"version":3,"sources":["App.jsx","index.jsx"],"names":["goods","App","state","selectedGood","handleAddButton","condition","newGood","setState","handleClearButton","this","goodLength","length","className","type","onClick","map","good","isSelected","classNames","style","display","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0QAMaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,gBAAkB,SAACC,EAAWC,GAC5B,EAAKC,SAAS,CACZJ,aAAgBE,EAEZ,GADAC,KARV,EAaEE,kBAAoB,WAClB,EAAKD,SAAS,CAAEJ,aAAc,MAdlC,4CAiBE,WAAU,IAAD,OACCA,EAAiBM,KAAKP,MAAtBC,aACFO,EAAaP,EAAaQ,OAEhC,OACE,uBAAMC,UAAU,oBAAhB,UACE,qBAAIA,UAAU,sCAAd,UACKF,EAAD,UAEKP,EAFL,gBAIE,oBAEFO,EAAa,GACf,wBACE,UAAQ,cACRG,KAAK,SACLD,UAAU,cACVE,QAASL,KAAKD,uBAKlB,uBAAOI,UAAU,QAAjB,SACE,gCACIZ,EAAMe,KAAI,SAACC,GACX,IAAMC,EAAad,IAAiBa,EAEpC,OACE,qBACE,UAAQ,OAERJ,UAAWM,IACT,aACA,CAAE,+BAAgCD,IALtC,UAQE,6BACE,wBACE,UAASA,EAAa,eAAiB,YACvCJ,KAAK,SACLD,UAAWM,IACT,SAAU,CAAE,iBAAkBD,IAEhCE,MAAO,CAAEC,QAAS,QAClBN,QAAS,kBAAM,EAAKV,gBAAgBa,EAAYD,IAPlD,SASGC,EACG,IACA,QAGR,oBAAI,UAAQ,YAAYL,UAAU,eAAeS,GAAIL,EAArD,SACGA,MAtBEA,iBAhDvB,GAAyBM,IAAMC,WChB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.03dacc58.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport class App extends React.Component {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  handleAddButton = (condition, newGood) => {\n    this.setState({\n      selectedGood: (!condition)\n        ? newGood\n        : '',\n    });\n  };\n\n  handleClearButton = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n    const goodLength = selectedGood.length;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title is-flex is-align-items-center\">\n          { (goodLength)\n            ? (\n              `${selectedGood} is selected`\n            )\n            : 'No goods selected' }\n\n          {(goodLength > 0) && (\n          <button\n            data-cy=\"ClearButton\"\n            type=\"button\"\n            className=\"delete ml-3\"\n            onClick={this.handleClearButton}\n          />\n          )}\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            { goods.map((good) => {\n              const isSelected = selectedGood === good;\n\n              return (\n                <tr\n                  data-cy=\"Good\"\n                  key={good}\n                  className={classNames(\n                    'unselected',\n                    { 'has-background-success-light': isSelected },\n                  )}\n                >\n                  <td>\n                    <button\n                      data-cy={isSelected ? 'RemoveButton' : 'AddButton'}\n                      type=\"button\"\n                      className={classNames(\n                        'button', { 'button is-info': isSelected },\n                      )}\n                      style={{ display: 'flex' }}\n                      onClick={() => this.handleAddButton(isSelected, good)}\n                    >\n                      {isSelected\n                        ? '-'\n                        : '+'}\n                    </button>\n                  </td>\n                  <td data-cy=\"GoodTitle\" className=\"is-vcentered\" id={good}>\n                    {good}\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}